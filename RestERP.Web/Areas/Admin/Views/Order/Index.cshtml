@using RestERP.Domain.Enums
@model IEnumerable<RestERP.Core.Domain.Entities.Order>

@{
    ViewData["Title"] = "Siparişler";
}

<div class="container-fluid">
    <br />
    <h2 class="mb-4">Siparişler</h2>

    <div class="row">
        @foreach (var tableGroup in Model.GroupBy(o => o.TableId))
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Masa @tableGroup.Key</h5>
                        <button class="btn btn-danger btn-sm" onclick="window.location.href='@Url.Action("CancelOrder", "Order", new { area = "Admin", id = tableGroup.First().Id })'">
                            Masa Siparişlerini İptal Et
                        </button>
                    </div>
                    <div class="card-body">
                        @foreach (var order in tableGroup.OrderByDescending(o => o.OrderDate))
                        {
                            <div class="order-item mb-3 p-3 border rounded">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6>Sipariş No: @order.Id</h6>
                                        <p class="mb-1">Durum: @order.Status</p>
                                        <p class="mb-1">Tarih: @order.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <h6>Ürünler:</h6>
                                    <ul class="list-unstyled">
                                        @foreach (var item in order.OrderItems)
                                        {
                                            <li>
                                                @item.Quantity x @item.Food.TurkishName
                                            </li>
                                        }
                                    </ul>
                                </div>
                                @if (order.Status != OrderStatus.Cancelled)
                                {
                                    <p class="mb-1">Toplam Tutar: @order.TotalAmount</p>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function cancelOrderItem(orderId, orderItemId) {
            if (!confirm('Bu ürünü iptal etmek istediğinize emin misiniz?')) return;
            $.ajax({
                url: '@Url.Action("CancelOrderItem", "Order", new { area = "Admin" })',
                type: 'POST',
                data: { orderId: orderId, orderItemId: orderItemId },
                success: function (result) {
                    if (result.success) {
                        location.reload();
                    } else {
                        alert(result.message || 'Ürün iptal edilirken bir hata oluştu.');
                    }
                },
                error: function () {
                    alert('Bir hata oluştu.');
                }
            });
        }
    </script>
}
