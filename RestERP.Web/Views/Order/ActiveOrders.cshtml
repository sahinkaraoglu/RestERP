@model IEnumerable<RestERP.Domain.Entities.Order>

@{
    ViewData["Title"] = "Aktif Siparişler";
}

<div class="active-orders-container">
    <div class="page-header">
        <h1>Aktif Siparişler</h1>
        <div class="divider">
            <span>✦</span>
        </div>
        <p>Restoranda şu anda aktif olan siparişleri görüntüleyin ve yönetin</p>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="no-orders-message">
            <i class="bi bi-exclamation-circle"></i>
            <p>Şu anda aktif sipariş bulunmamaktadır.</p>
            <a href="/Panel/Table" class="action-link">Masa Yönetimine Dön</a>
        </div>
    }
    else
    {
        <div class="active-orders-grid">
            @foreach (var order in Model)
            {
                <div class="order-card">
                    <div class="order-header">
                        <div class="order-number">Sipariş No: @order.OrderNumber</div>
                        <div class="order-status @order.Status.ToString().ToLower()">@GetStatusText(order.Status)</div>
                    </div>
                    <div class="order-info">
                        <div class="info-row"><span>Masa:</span> <span>Masa @order.TableId</span></div>
                        <div class="info-row"><span>Tarih:</span> <span>@(order.CreatedDate.HasValue ? order.CreatedDate.Value.ToString("dd.MM.yyyy HH:mm") : "-")</span></div>
                        <div class="info-row"><span>Toplam:</span> <span>@order.TotalAmount.ToString("N2") ₺</span></div>
                    </div>
                    <div class="order-items">
                        <h3>Sipariş Kalemleri</h3>
                        <div class="items-container">
                            @if (order.OrderItems != null && order.OrderItems.Any())
                            {
                                <ul>
                                    @foreach (var item in order.OrderItems)
                                    {
                                        <li>
                                            <span class="item-name">@item.Food.Name</span>
                                            <span class="item-quantity">x @item.Quantity</span>
                                            <span class="item-price">@item.TotalPrice.ToString("N2") ₺</span>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="no-items">Sipariş detayları bulunamadı</p>
                            }
                        </div>
                    </div>
                    <div class="order-actions">
                        <button class="btn-view" onclick="viewOrderDetails('@order.Id')">Detaylar</button>
                        @if (order.Status != RestERP.Domain.Enums.OrderStatus.Completed)
                        {
                            <button class="btn-complete" onclick="completeOrder('@order.Id')">Tamamla</button>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #f9f6f0;
        color: #333;
        line-height: 1.6;
    }

    .active-orders-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .page-header h1 {
        font-size: 2.2rem;
        font-weight: 600;
        color: #4a3c2e;
        margin-bottom: 8px;
        font-family: 'Lora', serif;
        letter-spacing: 1px;
    }

    .page-header p {
        color: #8c7762;
        font-size: 1.1rem;
        margin-top: 10px;
    }

    .divider {
        display: flex;
        align-items: center;
        margin: 12px auto;
        max-width: 300px;
    }

    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        height: 1px;
        background: linear-gradient(to right, transparent, #d2c4af, transparent);
    }

    .divider span {
        padding: 0 15px;
        color: #b09a7b;
        font-size: 1.2rem;
    }

    .no-orders-message {
        text-align: center;
        padding: 50px 20px;
        background-color: #f1eadd;
        border-radius: 8px;
        margin: 20px 0;
    }

    .no-orders-message i {
        font-size: 3rem;
        color: #b09a7b;
        margin-bottom: 15px;
    }

    .no-orders-message p {
        font-size: 1.2rem;
        color: #5d4b38;
        margin-bottom: 20px;
    }

    .action-link {
        display: inline-block;
        padding: 10px 25px;
        background-color: #5d4b38;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        font-weight: 500;
        transition: background-color 0.3s;
    }

    .action-link:hover {
        background-color: #4a3c2e;
    }

    .active-orders-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 25px;
    }

    .order-card {
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

    .order-card:hover {
        transform: translateY(-5px);
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        background-color: #f8f4ec;
        border-bottom: 1px solid #e0d8c8;
    }

    .order-number {
        font-weight: 600;
        color: #5d4b38;
    }

    .order-status {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .order-status.new {
        background-color: #e3f2fd;
        color: #0d47a1;
    }

    .order-status.inprogress {
        background-color: #fff3cd;
        color: #856404;
    }

    .order-status.ready {
        background-color: #d4edda;
        color: #155724;
    }

    .order-status.completed {
        background-color: #c6f6d5;
        color: #276749;
    }

    .order-status.cancelled {
        background-color: #f8d7da;
        color: #721c24;
    }

    .order-info {
        padding: 15px;
        border-bottom: 1px solid #f1eadd;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
    }

    .info-row span:first-child {
        color: #8c7762;
    }

    .info-row span:last-child {
        font-weight: 500;
        color: #4a3c2e;
    }

    .order-items {
        padding: 15px;
    }

    .order-items h3 {
        font-size: 1rem;
        color: #5d4b38;
        margin-bottom: 10px;
        font-weight: 600;
    }

    .items-container {
        max-height: 150px;
        overflow-y: auto;
        padding-right: 5px;
    }

    .items-container ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .items-container li {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid #f1eadd;
    }

    .item-name {
        flex: 1;
    }

    .item-quantity {
        margin: 0 15px;
        color: #8c7762;
    }

    .item-price {
        font-weight: 500;
    }

    .no-items {
        text-align: center;
        color: #8c7762;
        font-style: italic;
    }

    .order-actions {
        display: flex;
        padding: 15px;
        background-color: #f8f4ec;
        justify-content: space-between;
    }

    .order-actions button {
        padding: 8px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.3s;
        font-family: 'Montserrat', sans-serif;
    }

    .btn-view {
        background-color: #f1eadd;
        color: #5d4b38;
        border: 1px solid #d6c6af;
    }

    .btn-view:hover {
        background-color: #e0d8c8;
    }

    .btn-complete {
        background-color: #5d4b38;
        color: white;
    }

    .btn-complete:hover {
        background-color: #4a3c2e;
    }

    @@media (max-width: 768px) {
        .active-orders-grid {
            grid-template-columns: 1fr;
        }

        .order-card {
            margin-bottom: 20px;
        }
    }
</style>

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,500;0,600;0,700;1,400&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<script>
    function viewOrderDetails(orderId) {
        // Sipariş detaylarını görüntülemek için yönlendir
        alert('Sipariş detayları görüntülenecek. OrderID: ' + orderId);
        // Gerçek uygulamada: window.location.href = '/Order/Details/' + orderId;
    }
    
    function completeOrder(orderId) {
        if (confirm('Bu siparişi tamamlamak istediğinize emin misiniz?')) {
            // Siparişi tamamla API çağrısı yapılacak
            fetch('/api/orders/' + orderId + '/complete', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    alert('Sipariş başarıyla tamamlandı.');
                    location.reload();
                } else {
                    throw new Error('Sipariş tamamlanırken bir hata oluştu.');
                }
            })
            .catch(error => {
                alert(error.message);
            });
        }
    }
</script>

@functions {
    string GetStatusText(RestERP.Domain.Enums.OrderStatus status)
    {
        switch (status)
        {
            case RestERP.Domain.Enums.OrderStatus.New:
                return "Yeni";
            case RestERP.Domain.Enums.OrderStatus.InProgress:
                return "Hazırlanıyor";
            case RestERP.Domain.Enums.OrderStatus.Ready:
                return "Hazır";
            case RestERP.Domain.Enums.OrderStatus.Completed:
                return "Tamamlandı";
            case RestERP.Domain.Enums.OrderStatus.Cancelled:
                return "İptal Edildi";
            default:
                return status.ToString();
        }
    }
} 