@model Order

@{
    ViewData["Title"] = "Sipariş Detayları";
}

@using RestERP.Infrastructure.Data.SeedData
@using RestERP.Domain.Entities
@using RestERP.Domain.Enums
@using RestERP.Application.Services.Interfaces
@inject IFoodService FoodService

<div class="order-details-container">
    <div class="order-header">
        <h1>MASA @Model.TableId - Sipariş Detayları</h1>
        <div class="divider">
            <span>✦</span>
        </div>
    </div>

    @if (Model != null)
    {
        <div class="order-info">
            <div class="info-row">
                <div class="info-item">
                    <span class="label">Sipariş No:</span>
                    <span class="value">@Model.OrderNumber</span>
                </div>
                <div class="info-item">
                    <span class="label">Durum:</span>
                    <span class="value status-badge @Model.Status.ToString().ToLower()">@Model.Status</span>
                </div>
            </div>
        </div>

        <div class="order-items">
            <h3>Sipariş Kalemleri</h3>
            <table class="items-table">
                <thead>
                    <tr>
                        <th>Ürün</th>
                        <th>Miktar</th>
                        <th>Birim Fiyat</th>
                        <th>Toplam</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td>@(item.Food?.TurkishName ?? "Ürün Bulunamadı")</td>
                            <td>@item.Quantity</td>
                            <td>@item.UnitPrice.ToString("C2")</td>
                            <td>@item.TotalPrice.ToString("C2")</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="total-label">Toplam Tutar:</td>
                        <td class="total-amount">@Model.TotalAmount.ToString("C2")</td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="actions">
            <a href="/Table/Index" class="back-btn">
                <i class="bi bi-arrow-left"></i>
                Masalara Dön
            </a>
        </div>
    }
    else
    {
        <div class="no-order">
            <p>Sipariş bulunamadı.</p>
            <a href="/Table/Index" class="back-btn">Masalara Dön</a>
        </div>
    }
</div>

<style>
    .order-details-container {
        max-width: 800px;
        margin: 40px auto;
        padding: 20px;
    }

    .order-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .order-header h1 {
        font-size: 2rem;
        color: #5d4b38;
        margin-bottom: 10px;
    }

    .divider {
        display: flex;
        align-items: center;
        margin: 15px 0;
    }

    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        height: 1px;
        background: linear-gradient(to right, transparent, #d2c4af, transparent);
    }

    .divider span {
        padding: 0 15px;
        color: #b09a7b;
    }

    .order-info {
        background-color: #f8f4ec;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 30px;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 20px;
    }

    .info-item {
        flex: 1;
        min-width: 200px;
    }

    .label {
        font-weight: 600;
        color: #8c7762;
        margin-right: 10px;
    }

    .value {
        color: #5d4b38;
    }

    .status-badge {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .new {
        background-color: #e3f2fd;
        color: #1976d2;
    }

    .inprogress {
        background-color: #fff3e0;
        color: #f57c00;
    }

    .ready {
        background-color: #e8f5e9;
        color: #388e3c;
    }

    .completed {
        background-color: #efebe9;
        color: #5d4037;
    }

    .cancelled {
        background-color: #ffebee;
        color: #d32f2f;
    }

    .order-items {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .order-items h3 {
        padding: 20px;
        margin: 0;
        color: #5d4b38;
        border-bottom: 1px solid #eee;
    }

    .items-table {
        width: 100%;
        border-collapse: collapse;
    }

    .items-table th {
        background-color: #f8f4ec;
        color: #8c7762;
        font-weight: 600;
        text-align: left;
        padding: 12px 20px;
    }

    .items-table td {
        padding: 12px 20px;
        border-bottom: 1px solid #eee;
        color: #5d4b38;
    }

    .items-table tfoot td {
        background-color: #f8f4ec;
        font-weight: 600;
    }

    .total-label {
        text-align: right;
        color: #8c7762;
    }

    .total-amount {
        color: #5d4b38;
        font-size: 1.1rem;
    }

    .actions {
        margin-top: 30px;
        text-align: center;
    }

    .back-btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 20px;
        background-color: #8c7762;
        color: white;
        text-decoration: none;
        border-radius: 6px;
        transition: background-color 0.3s;
    }

    .back-btn:hover {
        background-color: #6a563d;
        color: white;
    }

    .no-order {
        text-align: center;
        padding: 40px;
        background-color: #f8f4ec;
        border-radius: 8px;
    }

    .no-order p {
        color: #8c7762;
        margin-bottom: 20px;
    }

    @@media (max-width: 768px) {
        .order-details-container {
            margin: 20px;
            padding: 15px;
        }

        .info-item {
            min-width: 100%;
        }

        .items-table {
            display: block;
            overflow-x: auto;
        }
    }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const completeOrderBtn = document.getElementById('completeOrderBtn');
        const cancelOrderBtn = document.getElementById('cancelOrderBtn');
        
        if (completeOrderBtn) {
            completeOrderBtn.addEventListener('click', function() {
                if (confirm('Siparişi tamamlamak istediğinize emin misiniz?')) {
                    const orderId = this.getAttribute('data-order-id');
                    updateOrderStatus(orderId, 'Completed');
                }
            });
        }
        
        if (cancelOrderBtn) {
            cancelOrderBtn.addEventListener('click', function() {
                if (confirm('Siparişi iptal etmek istediğinize emin misiniz?')) {
                    const orderId = this.getAttribute('data-order-id');
                    updateOrderStatus(orderId, 'Cancelled');
                }
            });
        }
        
        function updateOrderStatus(orderId, status) {
            fetch(`/api/orders/${orderId}/status`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    throw new Error('Sipariş durumu güncellenirken bir hata oluştu');
                }
            })
            .catch(error => {
                alert(error.message);
            });
        }
    });
</script>
