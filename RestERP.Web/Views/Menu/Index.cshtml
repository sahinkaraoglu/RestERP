@{
    ViewData["Title"] = "Menüler";
}

@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Identity
@using RestERP.Application.Services.Interfaces
@using RestERP.Core.Doman.Entities
@inject IUserService UserService

@{
    var currentUser = await UserService.GetUserByUsernameAsync(User.Identity.Name);
}

<div class="restaurant-menu">
    <div class="menu-header">
        <h1>RestERP Restaurant</h1>
        <div class="divider">
            <span>✦</span>
        </div>
        <h2>Menümüz</h2>
    </div>

    <div class="menu-container">
        @{
            var categories = (ViewBag.Categories as List<FoodCategory>) ?? new List<FoodCategory>();
            var allFoods = (ViewBag.Foods as List<Food>) ?? new List<Food>();
            var allImages = (ViewBag.Images as List<Image>) ?? new List<Image>();
        }

        @if (categories.Any())
        {
            @foreach (var category in categories)
            {
                var categoryFoods = allFoods.Where(f => f.CategoryId == category.Id).ToList();
                
                <div class="category">
                    <div class="category-header" onclick="toggleCategory(@category.Id)">
                        <h3>@category.TurkishName</h3>
                        <div class="toggle-icon">+</div>
                    </div>
                    <div class="subcategory-container" id="category-@category.Id">
                        <table class="subcategory-table">
                            <tbody>
                                @foreach (var subCategory in categoryFoods)
                                {
                                    <tr>
                                        <td class="subcategory-name">
                                            <div class="sub-item">
                                                <div class="food-info">
                                                    <span class="food-title">@subCategory.TurkishName</span>
                                                    <span class="food-description">@subCategory.Description</span>
                                                </div>
                                                <div class="quantity-control">
                                                    <button class="quantity-btn minus" onclick="decreaseQuantity(@subCategory.Id)">-</button>
                                                    <span id="quantity-@subCategory.Id" class="quantity-value">0</span>
                                                    <button class="quantity-btn plus" onclick="increaseQuantity(@subCategory.Id)">+</button>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="subcategory-price">@subCategory.Price ₺</td>
                                        <td class="subcategory-image">
                                            @{
                                                var foodImage = allImages.FirstOrDefault(i => i.FoodId == subCategory.Id);
                                                if (foodImage != null)
                                                {
                                                    <div class="food-image-container">
                                                        <img src="@foodImage.Path"  class="food-image">
                                                    </div>
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }
    </div>

    <div class="menu-footer">
        <div class="divider">
            <span>❦</span>
        </div>
        <p>Afiyet Olsun</p>
        <div class="cart-summary">
            <h3>Sepet Özeti</h3>
            <div id="cartItemsContainer">
                <p class="empty-cart-message">Sepetinizde ürün bulunmamaktadır.</p>
                <div id="cartItems"></div>
            </div>
            <div class="cart-total">
                <span>Toplam:</span>
                <span id="cartTotal">0.00 ₺</span>
            </div>
        </div>
        
        <div class="customer-info-panel">
            <div class="panel-tabs">
                <button class="tab-btn active" data-tab="dine-in">Restoranda</button>
                <button class="tab-btn" data-tab="delivery">Eve Teslimat</button>
            </div>
            
            <div class="tab-content">
                <div class="tab-pane active" id="dine-in">
                    <div class="form-group">
                        <label for="tableNumber">Masa Numarası:</label>
                        <input type="number" id="tableNumber" min="1" placeholder="Masa No">
                    </div>
                </div>
                
                <div class="tab-pane" id="delivery">
                    @if (User.Identity.IsAuthenticated && currentUser != null)
                    {
                        <div class="user-info">
                            <input type="hidden" id="deliveryName" value="@($"{currentUser.FirstName} {currentUser.LastName}")">
                            <input type="hidden" id="deliveryPhone" value="@currentUser.PhoneNumber">
                            <input type="hidden" id="deliveryAddress" value="@currentUser.Address">
                            <div class="info-display">
                                <p><strong>Ad Soyad:</strong> @($"{currentUser.FirstName} {currentUser.LastName}")</p>
                                <p><strong>Telefon:</strong> @currentUser.PhoneNumber</p>
                                <p><strong>Adres:</strong> @currentUser.Address</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="auth-message">
                            <p>Sipariş verebilmek için lütfen giriş yapın.</p>
                            <div class="auth-buttons">
                                <a href="/Login/Index" class="secondary-button auth-btn">Giriş Yap</a>
                                <a href="/Login/SignUp" class="secondary-button auth-btn">Üye Ol</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
            
            <div class="form-group">
                <label for="orderNote">Sipariş Notu:</label>
                <textarea id="orderNote" placeholder="Siparişiniz ile ilgili eklemek istediğiniz notlar..."></textarea>
            </div>
            
            <div class="auth-buttons">
                @if (!User.Identity.IsAuthenticated)
                {
                    <a href="/Login/Index" class="secondary-button auth-btn">Giriş Yap</a>
                    <a href="/Login/SignUp" class="secondary-button auth-btn">Üye Ol</a>
                }
            </div>
            
            <button id="orderButton" class="order-button">Sipariş Ver</button>
        </div>
    </div>
</div>

<!-- Script --><script>
    function toggleCategory(categoryId) {
        const container = document.getElementById(`category-${categoryId}`);
        const header = container.previousElementSibling;
        
        if (container.style.maxHeight) {
            container.style.maxHeight = null;
            header.classList.remove('category-active');
        } else {
            container.style.maxHeight = container.scrollHeight + "px";
            header.classList.add('category-active');
        }
    }

    function increaseQuantity(subCategoryId) {
        const quantityElement = document.getElementById(`quantity-${subCategoryId}`);
        let quantity = parseInt(quantityElement.innerText);
        quantityElement.innerText = quantity + 1;
        updateCart();
        event.stopPropagation();
    }

    function decreaseQuantity(subCategoryId) {
        const quantityElement = document.getElementById(`quantity-${subCategoryId}`);
        let quantity = parseInt(quantityElement.innerText);
        if (quantity > 0) {
            quantityElement.innerText = quantity - 1;
            updateCart();
        }
        event.stopPropagation();
    }

    function updateCart() {
        const cartItems = document.getElementById('cartItems');
        const cartItemsContainer = document.getElementById('cartItemsContainer');
        const emptyCartMessage = document.querySelector('.empty-cart-message');
        const cartTotalElement = document.getElementById('cartTotal');
        
        let items = [];
        let total = 0;
        
        // Tüm ürünleri topla
        const categories = document.querySelectorAll('.category');
        categories.forEach(category => {
            const categoryName = category.querySelector('.category-header h3').textContent;
            const rows = category.querySelectorAll('.subcategory-table tr');
            
            rows.forEach(row => {
                const name = row.querySelector('.subcategory-name span').textContent;
                const quantity = parseInt(row.querySelector('.quantity-value').textContent);
                const price = parseFloat(row.querySelector('.subcategory-price').textContent);
                
                if (quantity > 0) {
                    items.push({
                        name: name,
                        quantity: quantity,
                        price: price,
                        total: quantity * price
                    });
                    
                    total += quantity * price;
                }
            });
        });
        
        // Sepeti güncelle
        cartItems.innerHTML = '';
        
        if (items.length > 0) {
            emptyCartMessage.style.display = 'none';
            
            items.forEach(item => {
                const itemElement = document.createElement('div');
                itemElement.className = 'cart-item';
                itemElement.innerHTML = `
                    <div class="cart-item-name">
                        <span class="cart-item-quantity">x${item.quantity}</span>
                        <span>${item.name}</span>
                    </div>
                    <div class="cart-item-price">${item.total.toFixed(2)} ₺</div>
                `;
                cartItems.appendChild(itemElement);
            });
            
            cartTotalElement.textContent = `${total.toFixed(2)} ₺`;
        } else {
            emptyCartMessage.style.display = 'block';
            cartTotalElement.textContent = '0.00 ₺';
        }
    }

    function getCartItems() {
        const items = [];
        const categories = document.querySelectorAll('.category');
        
        categories.forEach(category => {
            const rows = category.querySelectorAll('.subcategory-table tr');
            
            rows.forEach(row => {
                const quantityElement = row.querySelector('.quantity-value');
                if (!quantityElement) return;
                
                const quantity = parseInt(quantityElement.textContent);
                if (quantity <= 0) return;
                
                const foodId = parseInt(quantityElement.id.replace('quantity-', ''));
                const name = row.querySelector('.food-title').textContent;
                const price = parseFloat(row.querySelector('.subcategory-price').textContent);
                
                items.push({
                    foodId: foodId,
                    name: name,
                    quantity: quantity,
                    price: price,
                    total: quantity * price
                });
            });
        });
        
        return items;
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Tab değiştirme işlevselliği
        const tabButtons = document.querySelectorAll('.tab-btn');
        const tabPanes = document.querySelectorAll('.tab-pane');
        
        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Aktif tab'ı değiştir
                tabButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');
                
                // İlgili içeriği göster
                const tabId = button.getAttribute('data-tab');
                tabPanes.forEach(pane => {
                    if (pane.id === tabId) {
                        pane.classList.add('active');
                    } else {
                        pane.classList.remove('active');
                    }
                });
            });
        });

        // Sipariş verme işlemi
        document.getElementById('orderButton').addEventListener('click', async function() {
            try {
                // Kullanıcı giriş kontrolü
                const isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();
                
                if (!isAuthenticated) {
                    Swal.fire({
                        title: 'Giriş Gerekli',
                        text: 'Sipariş verebilmek için önce giriş yapmalısınız.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Giriş Yap',
                        cancelButtonText: 'İptal',
                        confirmButtonColor: '#6a563d',
                        cancelButtonColor: '#d6c6af'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/Login/Index';
                        }
                    });
                    return;
                }

                const cartItems = getCartItems();
                if (cartItems.length === 0) {
                    Swal.fire({
                        title: 'Sepet Boş',
                        text: 'Lütfen sepete ürün ekleyiniz!',
                        icon: 'warning',
                        confirmButtonColor: '#6a563d'
                    });
                    return;
                }

                const activeTabId = document.querySelector('.tab-btn.active').getAttribute('data-tab');
                let customerInfo = {};
                let isValid = true;

                if (activeTabId === 'dine-in') {
                    const tableNumber = document.getElementById('tableNumber').value;
                    if (!tableNumber || tableNumber < 1) {
                        Swal.fire({
                            title: 'Hata',
                            text: 'Lütfen geçerli bir masa numarası giriniz!',
                            icon: 'error',
                            confirmButtonColor: '#6a563d'
                        });
                        isValid = false;
                    } else {
                        customerInfo.type = 'dine-in';
                        customerInfo.tableNumber = parseInt(tableNumber);
                    }
                } else if (activeTabId === 'delivery') {
                    const name = document.getElementById('deliveryName').value;
                    const phone = document.getElementById('deliveryPhone').value;
                    const address = document.getElementById('deliveryAddress').value;
                    
                    if (!name || name.trim() === '') {
                        Swal.fire({
                            title: 'Hata',
                            text: 'Lütfen adınızı giriniz!',
                            icon: 'error',
                            confirmButtonColor: '#6a563d'
                        });
                        isValid = false;
                    } else if (!phone || phone.trim() === '') {
                        Swal.fire({
                            title: 'Hata',
                            text: 'Lütfen telefon numaranızı giriniz!',
                            icon: 'error',
                            confirmButtonColor: '#6a563d'
                        });
                        isValid = false;
                    } else if (!address || address.trim() === '') {
                        Swal.fire({
                            title: 'Hata',
                            text: 'Lütfen adresinizi giriniz!',
                            icon: 'error',
                            confirmButtonColor: '#6a563d'
                        });
                        isValid = false;
                    } else {
                        customerInfo.type = 'delivery';
                        customerInfo.name = name;
                        customerInfo.phone = phone;
                        customerInfo.address = address;
                    }
                }
                
                if (!isValid) return;

                // Sipariş notunu al
                const orderNote = document.getElementById('orderNote').value;
                if (orderNote && orderNote.trim() !== '') {
                    customerInfo.note = orderNote;
                }

                // Sipariş verilerini hazırla
                const orderData = {
                    items: cartItems,
                    customerInfo: customerInfo
                };

                // Yükleniyor göster
                Swal.fire({
                    title: 'Sipariş Oluşturuluyor',
                    text: 'Lütfen bekleyiniz...',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Anti-forgery token'ı al
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Siparişi gönder
                const response = await fetch('/Order/CreateOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify(orderData)
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();

                if (result.success) {
                    // Başarılı
                    Swal.fire({
                        title: 'Başarılı!',
                        text: result.message || 'Siparişiniz başarıyla oluşturuldu.',
                        icon: 'success',
                        confirmButtonColor: '#6a563d'
                    }).then(() => {
                        // Order sayfasına yönlendir
                        window.location.href = '/Order';
                    });
                } else {
                    // Hata
                    Swal.fire({
                        title: 'Hata!',
                        text: result.message || 'Sipariş oluşturulurken bir hata oluştu.',
                        icon: 'error',
                        confirmButtonColor: '#6a563d'
                    });
                }
            } catch (error) {
                console.error('Sipariş gönderme hatası:', error);
                Swal.fire({
                    title: 'Hata!',
                    text: 'Sipariş gönderilirken bir hata oluştu. Lütfen daha sonra tekrar deneyiniz.',
                    icon: 'error',
                    confirmButtonColor: '#6a563d'
                });
            }
        });
        
        // İlk yüklemede sepeti güncelle
        updateCart();
    });
</script>

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #f9f6f0;
        color: #333;
        line-height: 1.6;
    }

    .restaurant-menu {
        max-width: 900px;
        margin: 40px auto;
        padding: 40px;
        background-color: #fff;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border: 1px solid #e5e0d5;
        position: relative;
    }

    .restaurant-menu::before {
        content: '';
        position: absolute;
        top: 12px;
        left: 12px;
        right: 12px;
        bottom: 12px;
        border: 1px solid #e0d8c8;
        pointer-events: none;
    }

    .menu-header {
        text-align: center;
        margin-bottom: 40px;
        position: relative;
    }

    .menu-header h1 {
        font-size: 2.4rem;
        font-weight: 600;
        color: #4a3c2e;
        margin-bottom: 8px;
        font-family: 'Lora', serif;
        letter-spacing: 1px;
    }

    .menu-header h2 {
        font-size: 1.7rem;
        font-weight: 400;
        color: #8c7762;
        margin-top: 4px;
        font-family: 'Lora', serif;
    }

    .divider {
        display: flex;
        align-items: center;
        margin: 12px 0;
    }

    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        height: 1px;
        background: linear-gradient(to right, transparent, #d2c4af, transparent);
    }

    .divider span {
        padding: 0 12px;
        color: #b09a7b;
        font-size: 1rem;
    }

    .menu-container {
        padding: 15px 8px;
    }

    .category {
        margin-bottom: 20px;
        border-bottom: 1px dashed #e5ded2;
        padding-bottom: 12px;
    }

    .category-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 12px;
        background-color: #f8f4ec;
        cursor: pointer;
        transition: all 0.3s ease;
        border-left: 3px solid #d6c6af;
    }

    .category-header:hover {
        background-color: #f1eadd;
    }

    .category-header h3 {
        font-size: 1.3rem;
        font-weight: 600;
        margin: 0;
        color: #6a563d;
        font-family: 'Lora', serif;
    }

    .toggle-icon {
        font-size: 1.3rem;
        color: #a38b6e;
        transition: transform 0.3s ease;
    }

    .subcategory-container {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.5s ease;
    }

    .subcategory-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 12px;
        margin-top: 8px;
    }

    .subcategory-table tr {
        transition: background-color 0.3s;
        border-bottom: 1px solid #f1eadd;
    }

    .subcategory-table tr:hover {
        background-color: #f9f6f0;
    }

    .subcategory-name {
        padding: 10px 12px;
        font-size: 1rem;
        color: #5c4c3a;
        font-weight: 500;
        width: 60%;
    }

    .subcategory-price {
        text-align: right;
        padding: 10px 12px;
        font-weight: 600;
        color: #8c7762;
        white-space: nowrap;
        width: 15%;
    }

    .subcategory-image {
        padding: 10px;
        text-align: right;
        width: 25%;
        vertical-align: middle;
    }

    .food-image-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .food-image {
        width: 150px;
        height: 120px;
        object-fit: cover;
        border-radius: 6px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.15);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .food-image:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 10px rgba(0,0,0,0.2);
    }

    .menu-footer {
        text-align: center;
        margin-top: 50px;
        font-style: italic;
    }

    .menu-footer p {
        margin-top: 10px;
        font-size: 1.3rem;
        color: #8c7762;
        font-family: 'Lora', serif;
    }

    /* Responsive Tasarım */
    @@media (max-width: 768px) {
        .restaurant-menu {
            padding: 20px;
            margin: 20px;
        }

        .menu-header h1 {
            font-size: 2.2rem;
        }

        .menu-header h2 {
            font-size: 1.6rem;
        }

        .category-header h3 {
            font-size: 1.3rem;
        }
        
        .food-image {
            width: 120px;
            height: 90px;
        }
        
        .subcategory-table {
            border-spacing: 0 8px;
        }
        
        .subcategory-name {
            width: 50%;
        }
        
        .subcategory-price {
            width: 20%;
        }
        
        .subcategory-image {
            width: 30%;
        }
    }
    
    @@media (max-width: 576px) {
        .subcategory-table tr {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 15px;
            border-bottom: 1px solid #e5ded2;
            padding-bottom: 10px;
        }
        
        .subcategory-name {
            width: 70%;
            order: 1;
        }
        
        .subcategory-price {
            width: 30%;
            order: 2;
            text-align: right;
        }
        
        .subcategory-image {
            width: 100%;
            order: 3;
            text-align: center;
            padding-top: 5px;
        }
        
        .food-image {
            width: 180px;
            height: 140px;
        }
    }

    .category-active .toggle-icon {
        transform: rotate(45deg);
    }

    /* Miktar kontrolleri için stiller */
    .sub-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }
    
    .food-info {
        display: flex;
        flex-direction: column;
    }
    
    .food-title {
        font-weight: 600;
        color: #5c4c3a;
        margin-bottom: 5px;
    }
    
    .food-description {
        font-size: 0.85rem;
        color: #8c7762;
        font-style: italic;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        margin-left: 10px;
    }

    .quantity-btn {
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f1eadd;
        border: 1px solid #d6c6af;
        color: #6a563d;
        font-size: 1rem;
        font-weight: bold;
        cursor: pointer;
        border-radius: 4px;
        transition: all 0.2s ease;
    }

    .quantity-btn:hover {
        background-color: #e0d8c8;
    }

    .quantity-value {
        margin: 0 8px;
        font-weight: 600;
        color: #6a563d;
        min-width: 20px;
        text-align: center;
    }
    
    /* Sipariş Ver butonu için stiller */
    .order-button {
        display: block;
        width: 100%;
        margin: 20px auto 0;
        padding: 12px 32px;
        background-color: #8c7762;
        color: white;
        border: none;
        border-radius: 4px;
        font-family: 'Montserrat', sans-serif;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    
    .order-button:hover {
        background-color: #6a563d;
    }

    .secondary-button {
        padding: 8px 16px;
        background-color: #f1eadd;
        color: #6a563d;
        border: 1px solid #d6c6af;
        border-radius: 4px;
        font-family: 'Montserrat', sans-serif;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .secondary-button:hover {
        background-color: #e0d8c8;
    }

    /* Sepet Özeti */
    .cart-summary {
        margin: 30px auto;
        background-color: #f8f4ec;
        border: 1px solid #e5ded2;
        border-radius: 6px;
        padding: 15px;
        max-width: 500px;
    }
    
    .cart-summary h3 {
        font-size: 1.2rem;
        color: #6a563d;
        margin-bottom: 10px;
        text-align: left;
        font-weight: 600;
    }
    
    .empty-cart-message {
        text-align: center;
        color: #a38b6e;
        font-style: italic;
        padding: 10px;
    }
    
    #cartItems {
        max-height: 200px;
        overflow-y: auto;
    }
    
    .cart-item {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px dashed #e5ded2;
    }
    
    .cart-item-name {
        display: flex;
        align-items: center;
    }
    
    .cart-item-quantity {
        background-color: #e0d8c8;
        color: #6a563d;
        font-weight: 600;
        padding: 2px 6px;
        border-radius: 3px;
        margin-right: 8px;
        font-size: 0.8rem;
    }
    
    .cart-item-price {
        font-weight: 600;
        color: #8c7762;
    }
    
    .cart-total {
        display: flex;
        justify-content: space-between;
        margin-top: 15px;
        padding-top: 10px;
        border-top: 2px solid #e0d8c8;
        font-weight: 700;
        color: #6a563d;
        font-size: 1.1rem;
    }

    /* Müşteri Bilgileri Paneli */
    .customer-info-panel {
        margin: 20px auto;
        max-width: 500px;
        background-color: #fff;
        border: 1px solid #e5ded2;
        border-radius: 6px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.05);
    }
    
    .panel-tabs {
        display: flex;
        border-bottom: 1px solid #e5ded2;
        margin-bottom: 20px;
    }
    
    .tab-btn {
        padding: 8px 16px;
        background: none;
        border: none;
        border-bottom: 3px solid transparent;
        font-family: 'Montserrat', sans-serif;
        font-weight: 500;
        color: #a38b6e;
        cursor: pointer;
        transition: all 0.3s;
    }
    
    .tab-btn.active {
        color: #6a563d;
        border-bottom: 3px solid #8c7762;
        font-weight: 600;
    }
    
    .tab-content {
        margin-bottom: 20px;
    }
    
    .tab-pane {
        display: none;
    }
    
    .tab-pane.active {
        display: block;
    }
    
    .form-group {
        margin-bottom: 15px;
    }
    
    .form-group label {
        display: block;
        font-weight: 500;
        color: #6a563d;
        margin-bottom: 5px;
    }
    
    .form-group input, 
    .form-group textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #d6c6af;
        border-radius: 4px;
        font-family: 'Montserrat', sans-serif;
        font-size: 0.9rem;
        color: #333;
    }
    
    .form-group input:focus, 
    .form-group textarea:focus {
        outline: none;
        border-color: #8c7762;
        box-shadow: 0 0 5px rgba(140, 119, 98, 0.3);
    }
    
    .form-group textarea {
        min-height: 80px;
        resize: vertical;
    }

    /* Auth Buttons */
    .auth-buttons {
        display: flex;
        justify-content: center;
        margin-top: 15px;
        gap: 10px;
    }
    
    .auth-btn {
        text-decoration: none;
        display: inline-block;
        text-align: center;
        min-width: 120px;
    }
    
    @@media (max-width: 768px) {
        .order-container {
            flex-direction: column;
        }
        
        .panel-tabs {
            flex-wrap: wrap;
        }
        
        .tab-btn {
            flex: 1;
            font-size: 0.9rem;
            padding: 8px;
        }
        
        .auth-buttons {
            flex-direction: row;
        }
    }

    .user-info {
        background-color: #f8f4ec;
        padding: 15px;
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .info-display p {
        margin: 8px 0;
        color: #6a563d;
    }

    .info-display strong {
        color: #8c7762;
    }

    .auth-message {
        text-align: center;
        padding: 20px;
        background-color: #f8f4ec;
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .auth-message p {
        color: #6a563d;
        margin-bottom: 15px;
    }
</style>

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,500;0,600;0,700;1,400&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
