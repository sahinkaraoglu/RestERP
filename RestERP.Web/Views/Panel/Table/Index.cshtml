@model IEnumerable<RestERP.Domain.Entities.Table>
@{
    ViewData["Title"] = "Masa Yönetimi";
}

<div class="tables-container">
    <div class="tables-header">
        <h1>Masa Yönetimi</h1>
        <p>Restoran masalarınızı kolayca yönetin ve takip edin</p>
    </div>
    
    <div class="tables-grid">
        @if (Model != null && Model.Any())
        {
            @foreach (var table in Model)
            {
                <div class="table-item" onclick="handleTableClick(@table.Id)" id="table-@table.Id">
                    <div class="table-box">
                        <h2>MASA @table.Id</h2>
                        <div class="table-status"></div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-tables-message">
                <p>Henüz hiç masa eklenmemiş.</p>
            </div>
        }
    </div>
</div>

<div id="tableModal" class="table-modal">
    <div class="modal-content">
        <span class="close-btn">&times;</span>
        <h2>MASA <span id="tableNumber"></span></h2>
        <div class="table-actions">
            <button class="action-btn order-btn">Sipariş Al</button>
            <button class="action-btn checkout-btn">Hesap Kapat</button>
            <button class="action-btn view-btn">Siparişleri Görüntüle</button>
        </div>
    </div>
</div>

<style>
    .tables-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
    }
    
    .tables-header {
        text-align: center;
        margin-bottom: 40px;
    }
    
    .tables-header h1 {
        font-size: 2.2rem;
        color: #5d4b38;
        margin-bottom: 10px;
    }
    
    .tables-header p {
        color: #8c7762;
        font-size: 1.1rem;
    }
    
    .tables-grid {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 30px;
    }
    
    .table-item {
        width: 200px;
        cursor: pointer;
        transition: transform 0.3s ease;
    }
    
    .table-item:hover {
        transform: translateY(-5px);
    }
    
    .table-box {
        border: 2px solid #5d4b38;
        height: 120px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        transition: all 0.3s ease;
    }
    
    .table-box.occupied {
        background-color: rgba(255, 87, 34, 0.1);
        border-color: #FF5722;
    }
    
    .table-box h2 {
        font-size: 1.4rem;
        color: #5d4b38;
        margin: 0;
        text-align: center;
        transition: color 0.3s ease;
    }
    
    .table-box.occupied h2 {
        color: #FF5722;
    }
    
    .table-status {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        position: absolute;
        bottom: 10px;
        right: 10px;
        transition: background-color 0.3s ease;
    }
    
    .table-status.available {
        background-color: #4CAF50;
    }
    
    .table-status.occupied {
        background-color: #FF5722;
    }
    
    .table-status.reserved {
        background-color: #FFC107;
    }
    
    /* Modal Styles */
    .table-modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }
    
    .modal-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 20px;
        border-radius: 8px;
        width: 80%;
        max-width: 500px;
        position: relative;
    }
    
    .close-btn {
        position: absolute;
        right: 20px;
        top: 10px;
        font-size: 24px;
        cursor: pointer;
        color: #5d4b38;
    }
    
    .table-actions {
        margin-top: 20px;
        display: flex;
        gap: 10px;
        justify-content: center;
    }
    
    .action-btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .order-btn {
        background-color: #4CAF50;
        color: white;
    }
    
    .checkout-btn {
        background-color: #FF5722;
        color: white;
    }
    
    .view-btn {
        background-color: #2196F3;
        color: white;
    }
    
    .action-btn:hover {
        opacity: 0.9;
    }
    
    .action-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const modal = document.getElementById('tableModal');
        const tableNumber = document.getElementById('tableNumber');
        const closeBtn = document.querySelector('.close-btn');
        const viewOrderBtn = document.querySelector('.view-btn');
        const checkoutBtn = document.querySelector('.checkout-btn');
        const orderBtn = document.querySelector('.order-btn');
        
        // Sayfa yüklendiğinde tüm masaların durumunu kontrol et
        @if (Model != null && Model.Any())
        {
            @foreach (var table in Model)
            {
                <text>
                checkTableStatus(@table.Id);
                </text>
            }
        }
        
        // Masa durumunu kontrol eden fonksiyon
        function checkTableStatus(tableId) {
            fetch(`/api/orders/table/${tableId}`)
                .then(response => response.json())
                .then(orders => {
                    const hasActiveOrder = orders.some(order => 
                        order.status !== 'Completed' && order.status !== 'Cancelled'
                    );
                    
                    const tableBox = document.querySelector(`#table-${tableId} .table-box`);
                    const tableStatus = document.querySelector(`#table-${tableId} .table-status`);
                    
                    if (hasActiveOrder) {
                        tableBox.classList.add('occupied');
                        tableStatus.classList.remove('available');
                        tableStatus.classList.add('occupied');
                    } else {
                        tableBox.classList.remove('occupied');
                        tableStatus.classList.remove('occupied');
                        tableStatus.classList.add('available');
                    }
                })
                .catch(error => {
                    console.error('Masa durumu kontrol edilirken hata:', error);
                });
        }
        
        window.handleTableClick = function(number) {
            tableNumber.textContent = number;
            modal.style.display = 'block';
            
            // API'den masa için aktif sipariş kontrolü yap
            fetch(`/api/orders/table/${number}`)
                .then(response => response.json())
                .then(orders => {
                    const hasActiveOrder = orders.some(order => 
                        order.status !== 'Completed' && order.status !== 'Cancelled'
                    );
                    
                    // Siparişleri görüntüle ve hesap kapat butonlarının durumunu güncelle
                    viewOrderBtn.disabled = !hasActiveOrder;
                    viewOrderBtn.style.opacity = hasActiveOrder ? '1' : '0.5';
                    checkoutBtn.disabled = !hasActiveOrder;
                    checkoutBtn.style.opacity = hasActiveOrder ? '1' : '0.5';
                    orderBtn.disabled = hasActiveOrder;
                    orderBtn.style.opacity = hasActiveOrder ? '0.5' : '1';
                })
                .catch(error => {
                    console.error('Sipariş durumu kontrol edilirken hata:', error);
                });
        }
        
        // Sipariş al butonuna tıklandığında
        orderBtn.addEventListener('click', function() {
            const tableNo = tableNumber.textContent;
            window.location.href = `/Order/Create?tableId=${tableNo}`;
        });
        
        // Siparişleri görüntüle butonuna tıklandığında
        viewOrderBtn.addEventListener('click', function() {
            const tableNo = tableNumber.textContent;
            window.location.href = `/Order/ViewOrder?tableId=${tableNo}`;
        });
        
        // Hesap kapat butonuna tıklandığında
        checkoutBtn.addEventListener('click', function() {
            const tableNo = tableNumber.textContent;
            window.location.href = `/Order/Checkout?tableId=${tableNo}`;
        });
        
        // Modal kapatma
        closeBtn.addEventListener('click', function() {
            modal.style.display = 'none';
        });
        
        // Modal dışına tıklandığında kapat
        window.addEventListener('click', function(event) {
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        });
        
        // Her 30 saniyede bir masa durumlarını güncelle
        setInterval(function() {
            @if (Model != null && Model.Any())
            {
                @foreach (var table in Model)
                {
                    <text>
                    checkTableStatus(@table.Id);
                    </text>
                }
            }
        }, 30000);
    });
</script> 