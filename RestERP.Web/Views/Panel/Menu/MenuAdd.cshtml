@model dynamic
@{
    ViewData["Title"] = "Yeni Menü Ürünü Ekle";
    var categories = ViewBag.Categories;
}

<div class="dashboard-container">
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <h1 class="dashboard-title">Yeni Menü Ürünü Ekle</h1>
                    <p class="dashboard-subtitle">Menüye yeni bir ürün ekleyin</p>
                </div>
                <div class="col-lg-4 text-end">
                    <a href="/Panel/Menu" class="btn btn-light rounded-pill"><i class="bi bi-arrow-left"></i> Menü Yönetimine Dön</a>
                </div>
            </div>
        </div>
    </div>

    <div class="container dashboard-content">
        <!-- Bildirim Toast -->
        <div class="position-fixed top-0 end-0 p-3" style="z-index: 1050">
            <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="bi bi-check-circle-fill me-2"></i>
                        <span id="toastMessage">Ürün başarıyla eklendi!</span>
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">Ürün Bilgileri</h5>
                    </div>
                    <div class="card-body">
                        <form id="addItemForm" action="/Panel/AddMenuItem" method="post">
                            <div class="mb-4">
                                <label for="itemCategory" class="form-label">Kategori</label>
                                <select class="form-select" id="itemCategory" name="CategoryId" required>
                                    <option value="">Kategori Seçin</option>
                                    @foreach (var category in categories)
                                    {
                                        <option value="@category.Id">@category.TurkishName</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-4">
                                <label for="itemName" class="form-label">Ürün Adı (Türkçe)</label>
                                <input type="text" class="form-control" id="itemName" name="TurkishName" required>
                            </div>
                            <div class="mb-4">
                                <label for="itemNameEn" class="form-label">Ürün Adı (İngilizce)</label>
                                <input type="text" class="form-control" id="itemNameEn" name="Name" required>
                            </div>
                            <div class="mb-4">
                                <label for="itemDesc" class="form-label">Açıklama</label>
                                <textarea class="form-control" id="itemDesc" name="Description" rows="3"></textarea>
                            </div>
                            <div class="row mb-4">
                                <div class="col-md-6">
                                    <label for="itemPrice" class="form-label">Fiyat (₺)</label>
                                    <div class="input-group">
                                        <input type="number" step="0.01" class="form-control" id="itemPrice" name="Price" required>
                                        <span class="input-group-text">₺</span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="isActive" name="IsActive" checked>
                                    <label class="form-check-label" for="isActive">
                                        Aktif (Menüde görünsün)
                                    </label>
                                </div>
                            </div>
                            <div class="text-end">
                                <a href="/Panel/Menu" class="btn btn-outline-secondary me-2">İptal</a>
                                <button type="submit" class="btn btn-primary">Ürünü Kaydet</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .dashboard-container {
        background-color: #f9f7f4;
        min-height: 100vh;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #5d4b38, #b09a7b);
        color: white;
        padding: 20px 0 15px;
        margin-bottom: 30px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    
    .dashboard-title {
        font-size: 1.8rem;
        font-weight: 700;
        margin-bottom: 2px;
    }
    
    .dashboard-subtitle {
        font-size: 0.9rem;
        opacity: 0.9;
    }
    
    .dashboard-content {
        padding-bottom: 50px;
    }
    
    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.05);
        overflow: hidden;
    }
    
    .card-header {
        background: linear-gradient(135deg, #f1ece5, #e5ded3);
        border-bottom: none;
        padding: 15px 20px;
    }
    
    .card-title {
        color: #5d4b38;
        font-weight: 600;
        margin-bottom: 0;
    }
    
    .card-body {
        padding: 25px;
    }
    
    .form-label {
        color: #5d4b38;
        font-weight: 500;
        margin-bottom: 8px;
    }
    
    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid #e5ded3;
        padding: 10px 15px;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #b09a7b;
        box-shadow: 0 0 0 0.2rem rgba(176, 154, 123, 0.25);
    }
    
    .input-group-text {
        background-color: #e5ded3;
        border: 1px solid #e5ded3;
        color: #5d4b38;
    }
    
    .form-check-input:checked {
        background-color: #5d4b38;
        border-color: #5d4b38;
    }
    
    .btn-primary {
        background-color: #5d4b38;
        border-color: #5d4b38;
        padding: 8px 20px;
        border-radius: 20px;
    }
    
    .btn-primary:hover {
        background-color: #4a3c2d;
        border-color: #4a3c2d;
    }
    
    .btn-outline-secondary {
        color: #6c757d;
        border-color: #6c757d;
        padding: 8px 20px;
        border-radius: 20px;
    }
    
    .btn-outline-secondary:hover {
        background-color: #6c757d;
        color: white;
    }
    
    /* Toast Stilleri */
    .toast {
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .dashboard-header {
            padding: 15px 0;
        }
        
        .dashboard-title {
            font-size: 1.5rem;
        }
        
        .card-body {
            padding: 15px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toast nesnesini oluştur
        var successToastEl = document.getElementById('successToast');
        var successToast = new bootstrap.Toast(successToastEl, {
            animation: true,
            autohide: true,
            delay: 3000
        });
        
        // Ürün ekleme formunun gönderilmesi
        const addItemForm = document.getElementById('addItemForm');
        addItemForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Form verilerini al
            const formData = new FormData(addItemForm);
            
            // Zorunlu alanların kontrolü
            const name = formData.get('Name');
            const turkishName = formData.get('TurkishName');
            const categoryId = formData.get('CategoryId');
            const price = formData.get('Price');
            
            if (!name || !turkishName || !categoryId || !price) {
                alert('Lütfen tüm zorunlu alanları doldurun (Kategori, Türkçe ve İngilizce ürün adı, fiyat)');
                return;
            }
            
            // Form verilerini JSON'a dönüştür
            const jsonData = {};
            for (const [key, value] of formData.entries()) {
                if (key === 'IsActive' || key === 'IsVegan' || key === 'IsVegetarian' || key === 'IsGlutenFree' || key === 'IsSpicy') {
                    jsonData[key] = true; // Checkbox işaretliyse true
                } else if (key === 'CategoryId') {
                    // CategoryId'yi sayıya dönüştür
                    jsonData[key] = parseInt(value);
                } else if (key === 'Price') {
                    // Price'ı decimal değere dönüştür (virgülü noktaya çevirerek)
                    jsonData[key] = parseFloat(value.replace(',', '.'));
                } else {
                    jsonData[key] = value;
                }
            }
            
            // İşaretli olmayan checkboxlar için false değerini ekle
            if (!formData.has('IsActive')) jsonData['IsActive'] = false;
            if (!formData.has('IsVegan')) jsonData['IsVegan'] = false;
            if (!formData.has('IsVegetarian')) jsonData['IsVegetarian'] = false;
            if (!formData.has('IsGlutenFree')) jsonData['IsGlutenFree'] = false;
            if (!formData.has('IsSpicy')) jsonData['IsSpicy'] = false;
            
            // AJAX ile API'ye gönder
            fetch('/Panel/AddMenuItem', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(jsonData)
            })
            .then(response => {
                // Status kontrolü
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                
                // JSON yanıtını ayrıştır
                return response.json().catch(err => {
                    throw new Error('JSON parse hatası: ' + err.message);
                });
            })
            .then(data => {
                if (data.success) {
                    // Alert yerine Toast bildirimini göster
                    document.getElementById('toastMessage').textContent = data.message || 'Ürün başarıyla eklendi!';
                    successToast.show();
                    
                    // Kısa bir gecikme sonrası yönlendirme yap
                    setTimeout(function() {
                        window.location.href = '/Panel/Menu'; // Başarılı olursa menü listesine dön
                    }, 1500);
                } else {
                    alert(data.message || 'İşlem sırasında bir hata oluştu.');
                }
            })
            .catch(error => {
                console.error("Fetch hatası:", error);
                alert('Hata: ' + error.message); // Hata durumunda normal alert göster
            });
        });
        
        // Fiyat alanı için sadece sayı ve nokta girişine izin ver
        const priceInput = document.getElementById('itemPrice');
        priceInput.addEventListener('input', function(e) {
            this.value = this.value.replace(/[^0-9.]/g, '');
        });
    });
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
