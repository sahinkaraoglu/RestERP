@model dynamic
@{
    ViewData["Title"] = "Menü Yönetimi";
    var foodcategories = ViewBag.FoodCategories;
    var foods = ViewBag.Foods;
}

<div class="dashboard-container">
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <h1 class="dashboard-title">Menü Yönetimi</h1>
                    <p class="dashboard-subtitle">Yemek kategorileri ve ürünleri ekleyin, düzenleyin ve fiyatları güncelleyin</p>
                </div>
                <div class="col-lg-4 text-end">
                    <a href="/Panel/Index" class="btn btn-light rounded-pill"><i class="bi bi-arrow-left"></i> Panel'e Dön</a>
                    <button class="btn btn-success rounded-pill ms-2" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                        <i class="bi bi-plus-circle"></i> Yeni Kategori
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="container dashboard-content">
        <!-- Başarı ve Hata Mesajları -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        <!-- Kategori Filtreleme -->
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="category-filter">
                    <button class="filter-btn active" data-category="all">Tümü</button>
                    @foreach (var food in foodcategories)
                    {
                        <button class="filter-btn" data-category="@food.Id">@food.TurkishName</button>
                    }
                </div>
            </div>
        </div>

        <!-- Arama ve Yeni Ürün Ekleme -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="search-box">
                    <i class="bi bi-search"></i>
                    <input type="text" id="menuSearch" placeholder="Menü içinde ara...">
                </div>
            </div>
            <div class="col-md-6 text-end">                
                <a href="/Panel/MenuAdd" class="btn btn-primary rounded-pill">
               <i class="bi bi-plus-circle"></i> Yeni Ürün Ekle </a>
             </div>
        </div>

        <!-- Menü Öğeleri Listesi -->
        <div class="row g-3" id="menuItemsContainer">
            @foreach (var category in foodcategories)
            {
                <div class="col-12 menu-category" data-category="@category.Id">
                    <h3 class="category-title">
                        @{
                            int categoryId = Convert.ToInt32(category.Id);
                            var categoryIcon = categoryId switch
                            {
                                1 => "bi-egg-fried",
                                2 => "bi-flower1",
                                3 => "bi-fire",
                                4 => "bi-water",
                                5 => "bi-tsunami",
                                6 => "bi-fire",
                                7 => "bi-cake",
                                8 => "bi-cup-hot",
                                _ => "bi-hash"
                            };
                        }
                        <i class="bi @categoryIcon"></i> @category.TurkishName
                    </h3>
                    <div class="row g-3">
                        @foreach (var item in foods)
                        {
                            if (item.CategoryId == category.Id)
                            {
                                <div class="col-md-4 menu-item">
                                    <div class="menu-card">
                                        <div class="menu-card-header">
                                            <span class="menu-name">@item.TurkishName</span>
                                            <span class="menu-price">@item.Price.ToString("F2") ₺</span>
                                        </div>
                                        <div class="menu-card-body">
                                            <div class="menu-details">
                                                <p class="menu-desc">@item.Name</p>
                                            </div>
                                            <div class="menu-actions">
                                                <a href="/Panel/MenuUpdate?id=@item.Id" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a href="/Panel/MenuDelete?id=@item.Id" class="btn btn-sm btn-outline-danger">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Yeni Kategori Ekleme Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Yeni Kategori Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm">
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Kategori Adı (Türkçe)</label>
                        <input type="text" class="form-control" id="categoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="categoryNameEn" class="form-label">Kategori Adı (İngilizce)</label>
                        <input type="text" class="form-control" id="categoryNameEn" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="saveCategoryBtn">Kaydet</button>
            </div>
        </div>
    </div>
</div>



<style>
    .dashboard-container {
        background-color: #f9f7f4;
        min-height: 100vh;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #5d4b38, #b09a7b);
        color: white;
        padding: 20px 0 15px;
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    
    .dashboard-title {
        font-size: 1.8rem;
        font-weight: 700;
        margin-bottom: 2px;
    }
    
    .dashboard-subtitle {
        font-size: 0.9rem;
        opacity: 0.9;
    }
    
    .dashboard-content {
        padding-bottom: 30px;
    }
    
    /* Filtre Butonları */
    .category-filter {
        display: flex;
        overflow-x: auto;
        padding-bottom: 10px;
        gap: 10px;
    }
    
    .filter-btn {
        background-color: #f1ece5;
        border: none;
        border-radius: 20px;
        padding: 8px 15px;
        font-size: 0.85rem;
        color: #5d4b38;
        cursor: pointer;
        transition: all 0.3s;
        white-space: nowrap;
    }
    
    .filter-btn:hover {
        background-color: #e5ded3;
    }
    
    .filter-btn.active {
        background-color: #5d4b38;
        color: white;
    }
    
    /* Arama Kutusu */
    .search-box {
        position: relative;
        margin-bottom: 10px;
    }
    
    .search-box input {
        width: 100%;
        padding: 10px 15px 10px 40px;
        border-radius: 20px;
        border: 1px solid #ddd;
        background-color: white;
    }
    
    .search-box .bi-search {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #aaa;
    }
    
    /* Menü Kategori Başlığı */
    .category-title {
        font-size: 1.2rem;
        color: #5d4b38;
        margin-bottom: 15px;
        padding-bottom: 8px;
        border-bottom: 2px solid #e5ded3;
    }
    
    .category-title i {
        margin-right: 5px;
    }
    
    /* Menü Kartı */
    .menu-card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        overflow: hidden;
        transition: all 0.3s;
        height: 100%;
    }
    
    .menu-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    }
    
    .menu-card-header {
        padding: 12px 15px;
        background: linear-gradient(135deg, #f1ece5, #e5ded3);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .menu-name {
        font-weight: 600;
        color: #5d4b38;
    }
    
    .menu-price {
        font-weight: 700;
        color: #b09a7b;
    }
    
    .menu-card-body {
        padding: 12px 15px;
        display: flex;
        justify-content: space-between;
    }
    
    .menu-details {
        flex-grow: 1;
    }
    
    .menu-desc {
        font-size: 0.8rem;
        color: #6c757d;
        margin-bottom: 0;
    }
    
    .menu-actions {
        display: flex;
        gap: 5px;
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .dashboard-header {
            padding: 15px 0;
        }
        
        .dashboard-title {
            font-size: 1.5rem;
        }
        
        .filter-btn {
            padding: 6px 12px;
            font-size: 0.8rem;
        }
    }
    
    /* Modal Stilleri */
    .modal-content {
        border-radius: 10px;
        border: none;
    }
    
    .modal-header {
        background: linear-gradient(135deg, #f1ece5, #e5ded3);
        border-bottom: none;
    }
    
    .modal-title {
        color: #5d4b38;
        font-weight: 600;
    }
    
    .btn-primary, .btn-primary:hover {
        background-color: #5d4b38;
        border-color: #5d4b38;
    }
    
    .btn-outline-primary {
        color: #5d4b38;
        border-color: #5d4b38;
    }
    
    .btn-outline-primary:hover {
        background-color: #5d4b38;
        color: white;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Kategori filtre butonları
        const filterButtons = document.querySelectorAll('.filter-btn');
        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Aktif buton sınıfını kaldır
                filterButtons.forEach(btn => btn.classList.remove('active'));
                // Tıklanan butonu aktif yap
                this.classList.add('active');
                
                const category = this.getAttribute('data-category');
                filterMenuItems(category);
            });
        });
        
        // Menü öğelerini filtrele
        function filterMenuItems(category) {
            const menuCategories = document.querySelectorAll('.menu-category');
            
            if (category === 'all') {
                menuCategories.forEach(item => {
                    item.style.display = 'block';
                });
            } else {
                menuCategories.forEach(item => {
                    if (item.getAttribute('data-category') === category) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });
            }
        }
        
        // Arama işlevi
        const searchInput = document.getElementById('menuSearch');
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const menuItems = document.querySelectorAll('.menu-item');
            
            menuItems.forEach(item => {
                const menuName = item.querySelector('.menu-name').textContent.toLowerCase();
                const menuDesc = item.querySelector('.menu-desc').textContent.toLowerCase();
                
                if (menuName.includes(searchTerm) || menuDesc.includes(searchTerm)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        });
        
        // Yeni kategori ekleme
        const saveCategoryBtn = document.getElementById('saveCategoryBtn');
        saveCategoryBtn.addEventListener('click', function() {
            const categoryName = document.getElementById('categoryName').value;
            const categoryNameEn = document.getElementById('categoryNameEn').value;
            
            if (categoryName && categoryNameEn) {
                // Burada API'ye kategori ekleme isteği gönderilecek
                // Başarılı olursa:
                alert('Kategori başarıyla eklendi: ' + categoryName);
                $('#addCategoryModal').modal('hide');
            }
        });
        
        // Yeni ürün ekleme
        const saveItemBtn = document.getElementById('saveItemBtn');
        saveItemBtn.addEventListener('click', function() {
            const category = document.getElementById('itemCategory').value;
            const name = document.getElementById('itemName').value;
            const nameEn = document.getElementById('itemNameEn').value;
            const desc = document.getElementById('itemDesc').value;
            const price = document.getElementById('itemPrice').value;
            
            if (category && name && nameEn && price) {
                // Burada API'ye ürün ekleme isteği gönderilecek
                // Başarılı olursa:
                alert('Ürün başarıyla eklendi: ' + name);
                $('#addItemModal').modal('hide');
            }
        });
        
        
        
        // Silme onay butonu
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        confirmDeleteBtn.addEventListener('click', function() {
            const id = document.getElementById('deleteItemId').value;
            
            // Burada API'ye ürün silme isteği gönderilecek
            // Başarılı olursa:
            alert('Ürün başarıyla silindi');
            $('#deleteConfirmModal').modal('hide');
        });
    });
    
    // Ürün düzenleme fonksiyonu    function editMenuItem(id) {        // Düzenleme sayfasına yönlendir        window.location.href = `/Panel/MenuUpdate?id=${id}`;    }
    
    // Ürün silme fonksiyonu
    function deleteMenuItem(id) {
        document.getElementById('deleteItemId').value = id;
        $('#deleteConfirmModal').modal('show');
    }
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
