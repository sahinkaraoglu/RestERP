// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestERP.Infrastructure;

#nullable disable

namespace RestERP.Infrastructure.Migrations
{
    [DbContext(typeof(RestERPDbContext))]
    [Migration("20250517165352_InitialCreate3")]
    partial class InitialCreate3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestERP.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortenedEntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TurkishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Breakfast",
                            TurkishName = "Kahvaltı"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "OliveOilDishes",
                            TurkishName = "Zeytinyağlılar"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "HotAppetizers",
                            TurkishName = "Ara Sıcaklar"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Types of Fish",
                            TurkishName = "Balık Çeşitleri"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "SeasonalFish",
                            TurkishName = "Mevsim Balıkları"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "TypesofGrillDishes",
                            TurkishName = "Izgara ve Kavurmalar"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Dessert",
                            TurkishName = "Tatlılar"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Drinks",
                            TurkishName = "İçecekler"
                        });
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeRole")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortenedEntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TurkishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Turkish Breakfast Spread",
                            Price = "200₺",
                            TurkishName = "Kahvaltı Tabağı"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Mixed Breakfast (Per Person)",
                            Price = "300₺",
                            TurkishName = "Serpme Kahvaltı"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Cheese Platter",
                            Price = "70₺",
                            TurkishName = "Peynir Tabağı"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Olive Platter",
                            Price = "47,50₺",
                            TurkishName = "Zeytin Tabağı"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Omelette",
                            Price = "47,50₺",
                            TurkishName = "Omlet"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Omelette with Gorgonzola Cheese",
                            Price = "55₺",
                            TurkishName = "Kaşarlı Omlet"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Mixed Omelette",
                            Price = "80₺",
                            TurkishName = "Karışık Omlet"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Scrambled Eggs with Tomatoes and Green Pepper",
                            Price = "62,50₺",
                            TurkishName = "Menemen"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Scrambled Eggs with Garlic Sausages",
                            Price = "80₺",
                            TurkishName = "Sucuklu Yumurta"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Melted Cheese and Cornmeal",
                            Price = "100₺",
                            TurkishName = "Mıhlama"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Scrambled Eggs with Pastrami",
                            Price = "75₺",
                            TurkishName = "Pastırmalı Yumurta"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Fried Garlic Sausage",
                            Price = "85₺",
                            TurkishName = "Sahanda Sucuk"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "French Fries",
                            Price = "40₺",
                            TurkishName = "Patates Tava"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Rolled Pastry",
                            Price = "40₺",
                            TurkishName = "Mini Kalem Böreği"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Honey & Clotted Cream",
                            Price = "60₺",
                            TurkishName = "Bal & Kaymak"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "A Serving of Butter",
                            Price = "47,50₺",
                            TurkishName = "Tereyağı Porsiyonu"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Tomato and Cucumber",
                            Price = "47,50₺",
                            TurkishName = "Söğüş Tabağı"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Fruit Platter",
                            Price = "55₺",
                            TurkishName = "Meyve Tabağı"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Stuffed Peppers",
                            Price = "57,50₺",
                            TurkishName = "Biber Dolma"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Sauced Aubergine",
                            Price = "57,50₺",
                            TurkishName = "Soslu Patlıcan"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Artichoke",
                            Price = "57,50₺",
                            TurkishName = "Enginar"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Green Beans",
                            Price = "57,50₺",
                            TurkishName = "Taze Fasulye"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Stuffed Vine Leaves",
                            Price = "57,50₺",
                            TurkishName = "Yaprak Sarma"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            IsDeleted = false,
                            Name = "Assorted Olive Oil Dish Platter",
                            Price = "80₺",
                            TurkishName = "Zeytinyağı Tabağı"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            IsDeleted = false,
                            Name = "Fresh Fries",
                            Price = "40₺",
                            TurkishName = "Patates Tava"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 3,
                            IsDeleted = false,
                            Name = "Pastrami Pastry",
                            Price = "67,50₺",
                            TurkishName = "Paçanga Böreği"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            IsDeleted = false,
                            Name = "Mushroom Gratin",
                            Price = "75₺",
                            TurkishName = "Mantar Graten"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 3,
                            IsDeleted = false,
                            Name = "Fried Mushrooms",
                            Price = "55₺",
                            TurkishName = "Mantar Kavurma"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 3,
                            IsDeleted = false,
                            Name = "Julienne Sole Fish",
                            Price = "210₺",
                            TurkishName = "Julyen Dil Balığı"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Grilled Sea Bream 550 - 650 gr.",
                            Price = "550₺",
                            TurkishName = "Çipura Izgara 550 - 650 gr."
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Grilled Sea Bream 300 - 350 gr.",
                            Price = "310₺",
                            TurkishName = "Çipura Izgara 300 - 350 gr."
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Fried Whiting Fish",
                            Price = "260₺",
                            TurkishName = "Mezgit Tava"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Pan Seared Salmon",
                            Price = "415₺",
                            TurkishName = "Fesleğen Soslu Somon Izgara"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Sea Bass Filleted",
                            Price = "400₺",
                            TurkishName = "Levrek Fileto"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Grilled Sea Bass 550 - 650 gr.",
                            Price = "550₺",
                            TurkishName = "Levrek Izgara 550 - 650 gr."
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Grilled Sea Bass 300 - 350 gr.",
                            Price = "300₺",
                            TurkishName = "Levrek Izgara 300 - 350 gr."
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Sea Bass on the Clay Tile",
                            Price = "415₺",
                            TurkishName = "Kiremitte Levrek"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Broiled Salmon Steak",
                            Price = "400₺",
                            TurkishName = "Somon Izgara"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Grilled Sole Fish",
                            Price = "270₺",
                            TurkishName = "Dil Balığı Izgara"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 4,
                            IsDeleted = false,
                            Name = "Baked Salmon",
                            Price = "415₺",
                            TurkishName = "Somon Kavurma"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Horse Mackerel",
                            Price = "285₺",
                            TurkishName = "İstavrit"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Blue Fish",
                            Price = "295₺",
                            TurkishName = "Sarıkanat"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Bonito",
                            Price = "340₺",
                            TurkishName = "Palamut"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Fried Anchovies",
                            Price = "250₺",
                            TurkishName = "Hamsi Tava"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Whiting Fish",
                            Price = "270₺",
                            TurkishName = "Mezgit"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Red Mullet",
                            Price = "290₺",
                            TurkishName = "Tekir"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 5,
                            IsDeleted = false,
                            Name = "Loufer",
                            Price = "375₺",
                            TurkishName = "Lüfer"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Grilled Köfte",
                            Price = "200₺",
                            TurkishName = "Köfte Izgara"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Grilled Köfte with Cheese",
                            Price = "210₺",
                            TurkishName = "Kaşarlı Köfte Izgara"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Chicken Shish",
                            Price = "130₺",
                            TurkishName = "Piliç Izgara"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Roasting Chicken",
                            Price = "145₺",
                            TurkishName = "Piliç Kavurma"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Chicken Julienne with Eggplant Purée",
                            Price = "145₺",
                            TurkishName = "Beğendili Julyen Piliç"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Veal Fillet",
                            Price = "390₺",
                            TurkishName = "Bonfile"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Veal Fillet with Turkish Cheese",
                            Price = "400₺",
                            TurkishName = "Kaşarlı Bonfile"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Steak Fillet Julienne with Eggplant Purée",
                            Price = "400₺",
                            TurkishName = "Beğendili Julyen Bonfile"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Mixed Grill",
                            Price = "390₺",
                            TurkishName = "Karışık Izgara"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 6,
                            IsDeleted = false,
                            Name = "Shepherd's Roasting",
                            Price = "325₺",
                            TurkishName = "Çoban Kavurma"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Sütlaç",
                            Price = "55₺",
                            TurkishName = "Sütlaç"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Tres Leches Cake",
                            Price = "55₺",
                            TurkishName = "Trileçe"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Noah's Pudding",
                            Price = "55₺",
                            TurkishName = "Aşure"
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Profiterole",
                            Price = "55₺",
                            TurkishName = "Profiterol"
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Volcanic",
                            Price = "80₺",
                            TurkishName = "Volkanik"
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Fruit Dessert",
                            Price = "60₺",
                            TurkishName = "Meyveli Tatlılar"
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Pastries",
                            Price = "60₺",
                            TurkishName = "Hamur İşi Tatlıları"
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Ice Cream",
                            Price = "47,50₺",
                            TurkishName = "Dondurma Porsiyon"
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Mixed Fruits",
                            Price = "55₺",
                            TurkishName = "Meyve Tabağı"
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 7,
                            IsDeleted = false,
                            Name = "Tahini Bread Roll",
                            Price = "67,50₺",
                            TurkishName = "Tahinli Sarma"
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Canned Soft Drinks",
                            Price = "55₺",
                            TurkishName = "Meşrubat Çeşitleri"
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Ayran",
                            Price = "16₺",
                            TurkishName = "Ayran"
                        },
                        new
                        {
                            Id = 70,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Mineral Water",
                            Price = "16₺",
                            TurkishName = "Soda"
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Frute Mineral Water",
                            Price = "19₺",
                            TurkishName = "Meyveli Soda"
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Orange / Pomegranate Juice",
                            Price = "55₺",
                            TurkishName = "Sıkma Portakal / Nar Suyu"
                        },
                        new
                        {
                            Id = 73,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Nar Çiçeği Şerbeti",
                            Price = "55₺",
                            TurkishName = "Nar Çiçeği Şerbeti"
                        },
                        new
                        {
                            Id = 74,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Tea",
                            Price = "10₺",
                            TurkishName = "Çay"
                        },
                        new
                        {
                            Id = 75,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Instant Coffee",
                            Price = "40₺",
                            TurkishName = "Hazır Kahve"
                        },
                        new
                        {
                            Id = 76,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Turkish Coffee",
                            Price = "40₺",
                            TurkishName = "Türk Kahvesi"
                        },
                        new
                        {
                            Id = 77,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Filter Coffee",
                            Price = "47,50₺",
                            TurkishName = "Filtre Kahve"
                        },
                        new
                        {
                            Id = 78,
                            CategoryId = 8,
                            IsDeleted = false,
                            Name = "Water",
                            Price = "8₺",
                            TurkishName = "Su"
                        });
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("RestERP.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestERP.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Product", b =>
                {
                    b.HasOne("RestERP.Domain.Entities.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("RestERP.Domain.Entities.SubCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("RestERP.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestERP.Domain.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
