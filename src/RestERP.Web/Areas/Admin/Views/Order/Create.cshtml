@{
    ViewData["Title"] = "Sipariş Oluştur";
    var tableId = Context.Request.Query["tableId"].ToString();
}

@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Identity
@using RestERP.Application.Services.Interfaces
@using RestERP.Core.Domain.Entities
@using Microsoft.Extensions.Caching.Memory
@inject IUserService UserService
@inject IMemoryCache MemoryCache

@{
    var currentUser = await UserService.GetUserByUsernameAsync(User.Identity.Name);
    
    // Cache key'leri
    var categoriesCacheKey = "FoodCategories";
    var foodsCacheKey = "Foods";
    var imagesCacheKey = "FoodImages";
    
    // Cache'den verileri al veya yoksa ViewBag'den al
    var categories = await MemoryCache.GetOrCreateAsync(categoriesCacheKey, async entry => {
        entry.SlidingExpiration = TimeSpan.FromMinutes(30);
        return (ViewBag.Categories as List<FoodCategory>) ?? new List<FoodCategory>();
    });
    
    var allFoods = await MemoryCache.GetOrCreateAsync(foodsCacheKey, async entry => {
        entry.SlidingExpiration = TimeSpan.FromMinutes(30);
        return (ViewBag.Foods as List<Food>) ?? new List<Food>();
    });
    
    var allImages = await MemoryCache.GetOrCreateAsync(imagesCacheKey, async entry => {
        entry.SlidingExpiration = TimeSpan.FromMinutes(30);
        return (ViewBag.Images as List<Image>) ?? new List<Image>();
    });
}

<div class="admin-order-page">
    <!-- Toast Bildirimi -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="orderToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Bildirim</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                Sipariş başarıyla oluşturuldu!
            </div>
        </div>
    </div>

    <div class="page-header">
        <h1>Sipariş Oluştur</h1>
        <div class="header-divider"></div>
    </div>

    <div class="order-container">
        <div class="order-layout">
            <div class="menu-section">
                @if (categories.Any())
                {
                    @foreach (var category in categories)
                    {
                        var categoryFoods = allFoods.Where(f => f.CategoryId == category.Id).ToList();
                        
                        <div class="category-card">
                            <div class="category-header" onclick="toggleCategory(@category.Id)">
                                <h3>@category.TurkishName</h3>
                                <div class="toggle-icon">+</div>
                            </div>
                            <div class="category-content" id="category-@category.Id">
                                <div class="food-grid">
                                    @foreach (var food in categoryFoods)
                                    {
                                        <div class="food-card">
                                            @{
                                                var foodImage = allImages.FirstOrDefault(i => i.FoodId == food.Id);
                                            }
                                            @if (foodImage != null)
                                            {
                                                <div class="food-image">
                                                    <img src="@foodImage.Path" alt="@food.TurkishName">
                                                </div>
                                            }
                                            <div class="food-details">
                                                <h4>@food.TurkishName</h4>
                                                <p class="food-description">@food.Description</p>
                                                <div class="food-price">@food.Price ₺</div>
                                                <div class="quantity-control">
                                                    <button class="quantity-btn minus" onclick="decreaseQuantity(@food.Id)">-</button>
                                                    <span id="quantity-@food.Id" class="quantity-value">0</span>
                                                    <button class="quantity-btn plus" onclick="increaseQuantity(@food.Id)">+</button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="order-summary">
                <div class="summary-card">
                    <h3>Sipariş Özeti</h3>
                    <div id="cartItemsContainer">
                        <p class="empty-cart-message">Sepetinizde ürün bulunmamaktadır.</p>
                        <div id="cartItems"></div>
                    </div>
                    <div class="cart-total">
                        <span>Toplam Tutar:</span>
                        <span id="cartTotal">0.00 ₺</span>
                    </div>
                </div>

                <div class="order-details">
                    <div class="form-group">
                        <label for="tableNumber">Masa Numarası:</label>
                        <input type="number" id="tableNumber" min="1" class="form-control" placeholder="Masa No" value="@tableId" readonly>
                    </div>

                    <div class="form-group">
                        <label for="orderNote">Sipariş Notu:</label>
                        <textarea id="orderNote" class="form-control" placeholder="Siparişiniz ile ilgili eklemek istediğiniz notlar..."></textarea>
                    </div>

                    <button id="orderButton" class="btn btn-primary btn-block">Siparişi Tamamla</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background: #f8f4ec;
    }
    .admin-order-page {
        max-width: 1400px;
        margin: 32px auto 0 auto;
        padding: 24px 16px 32px 16px;
        background: #fffcf7;
        border-radius: 16px;
        box-shadow: 0 2px 16px rgba(0,0,0,0.07);
        border: 1px solid #f0e9df;
        min-height: 80vh;
    }
    .page-header {
        text-align: center;
        margin-bottom: 32px;
        padding: 18px 0 10px 0;
        background: none;
        border-radius: 0;
        border: none;
    }
    .page-header h1 {
        color: #5d4b38;
        font-size: 2.2rem;
        font-weight: 700;
        margin: 0;
    }
    .header-divider {
        width: 120px;
        height: 3px;
        background: linear-gradient(to right, #b09a7b, #f0e9df, #b09a7b);
        margin: 16px auto 0 auto;
        border-radius: 2px;
    }
    .order-layout {
        display: flex;
        gap: 32px;
        align-items: flex-start;
    }
    .menu-section {
        flex: 1 1 0;
        min-width: 0;
    }
    .order-summary {
        width: 340px;
        min-width: 280px;
        max-width: 100%;
        position: sticky;
        top: 32px;
    }
    .category-card {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        margin-bottom: 24px;
        border: 1px solid #e5e0d5;
        overflow: hidden;
    }
    .category-header {
        padding: 18px 24px;
        background: #f8f4ec;
        color: #5d4b38;
        font-weight: 600;
        font-size: 1.15rem;
        border-bottom: 1px solid #e5e0d5;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .category-header:hover {
        background: #f0e9df;
    }
    .food-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        gap: 20px;
        padding: 20px;
    }
    .food-card {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        border: 1px solid #e5e0d5;
        display: flex;
        flex-direction: column;
        height: 100%;
        min-width: 0;
        transition: box-shadow 0.2s, transform 0.2s;
    }
    .food-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 18px rgba(0,0,0,0.10);
    }
    .food-image img {
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-bottom: 1px solid #e5e0d5;
    }
    .food-details {
        padding: 18px 16px 14px 16px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }
    .food-details h4 {
        color: #5d4b38;
        margin: 0 0 0.7rem 0;
        font-size: 1.1rem;
        font-weight: 600;
        line-height: 1.3;
    }
    .food-description {
        color: #8c7762;
        font-size: 1rem;
        margin-bottom: 0.7rem;
        line-height: 1.5;
        flex-grow: 1;
    }
    .food-price {
        color: #b09a7b;
        font-size: 1.05rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }
    .quantity-control {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: auto;
    }
    .quantity-btn {
        width: 28px;
        height: 28px;
        border: none;
        background: #b09a7b;
        color: white;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background 0.2s;
    }
    .quantity-btn:hover {
        background: #8c7762;
    }
    .quantity-value {
        font-size: 1.05rem;
        font-weight: 600;
        color: #5d4b38;
        min-width: 24px;
        text-align: center;
    }
    .summary-card {
        background: #fff;
        border-radius: 10px;
        padding: 24px 20px 20px 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        border: 1px solid #e5e0d5;
        margin-bottom: 24px;
    }
    .summary-card h3 {
        color: #5d4b38;
        margin: 0 0 1.2rem 0;
        font-size: 1.2rem;
        font-weight: 600;
        padding-bottom: 0.7rem;
        border-bottom: 2px solid #eee;
    }
    .form-group label {
        font-weight: 500;
        color: #5d4b38;
        margin: 0 0 6px 0;
        display: block;
    }
    .form-control {
        padding: 10px 12px;
        border: 1px solid #e5e0d5;
        border-radius: 5px;
        font-size: 1rem;
        background-color: #fff;
        color: #5d4b38;
        width: 100%;
        margin-bottom: 12px;
    }
    .form-control:focus {
        outline: none;
        border-color: #b09a7b;
        box-shadow: 0 0 0 2px rgba(176, 154, 123, 0.1);
    }
    .btn-primary {
        background-color: #b09a7b;
        color: white;
        border: none;
        padding: 14px 0;
        border-radius: 7px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        width: 100%;
        transition: background 0.2s, box-shadow 0.2s;
        margin-top: 8px;
    }
    .btn-primary:hover {
        background-color: #8c7762;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .empty-cart-message {
        color: #8c7762;
        text-align: center;
        padding: 2rem 0;
        font-style: italic;
    }

    @@media (max-width: 1100px) {
        .order-layout {
            flex-direction: column;
        }
        .order-summary {
            width: 100%;
            min-width: 0;
            max-width: 100%;
            position: static;
            margin-top: 32px;
        }
    }

    @@media (max-width: 900px) {
        .food-grid {
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 14px;
            padding: 10px;
        }
        .admin-order-page {
            padding: 8px 2px 24px 2px;
        }
    }

    @@media (max-width: 600px) {
        .admin-order-page {
            padding: 2px 0 16px 0;
        }
        .food-grid {
            grid-template-columns: 1fr;
            gap: 10px;
        }
        .category-header {
            padding: 12px 10px;
            font-size: 1rem;
        }
        .summary-card {
            padding: 14px 8px 12px 8px;
        }
    }

    /* Toast Stilleri */
    .toast-container {
        z-index: 1050;
    }

    .toast {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .toast-header {
        background-color: #0d6efd;
        color: white;
        border-radius: 8px 8px 0 0;
    }

    .toast-header .btn-close {
        filter: brightness(0) invert(1);
    }

    .toast-body {
        padding: 1rem;
        color: #1a1a1a;
    }
</style>

<script>
    function toggleCategory(categoryId) {
        const container = document.getElementById(`category-${categoryId}`);
        const header = container.previousElementSibling;
        
        if (container.style.maxHeight) {
            container.style.maxHeight = null;
            header.classList.remove('category-active');
        } else {
            container.style.maxHeight = container.scrollHeight + "px";
            header.classList.add('category-active');
        }
    }

    function increaseQuantity(foodId) {
        const quantityElement = document.getElementById(`quantity-${foodId}`);
        let quantity = parseInt(quantityElement.innerText);
        quantityElement.innerText = quantity + 1;
        updateCart();
        event.stopPropagation();
    }

    function decreaseQuantity(foodId) {
        const quantityElement = document.getElementById(`quantity-${foodId}`);
        let quantity = parseInt(quantityElement.innerText);
        if (quantity > 0) {
            quantityElement.innerText = quantity - 1;
            updateCart();
        }
        event.stopPropagation();
    }

    function updateCart() {
        const cartItems = document.getElementById('cartItems');
        const cartItemsContainer = document.getElementById('cartItemsContainer');
        const emptyCartMessage = document.querySelector('.empty-cart-message');
        const cartTotalElement = document.getElementById('cartTotal');
        
        let items = [];
        let total = 0;
        
        const categories = document.querySelectorAll('.category-card');
        categories.forEach(category => {
            const foodCards = category.querySelectorAll('.food-card');
            
            foodCards.forEach(card => {
                const name = card.querySelector('h4').textContent;
                const quantity = parseInt(card.querySelector('.quantity-value').textContent);
                const price = parseFloat(card.querySelector('.food-price').textContent);
                
                if (quantity > 0) {
                    items.push({
                        name: name,
                        quantity: quantity,
                        price: price,
                        total: quantity * price
                    });
                    
                    total += quantity * price;
                }
            });
        });
        
        cartItems.innerHTML = '';
        
        if (items.length > 0) {
            emptyCartMessage.style.display = 'none';
            
            items.forEach(item => {
                const itemElement = document.createElement('div');
                itemElement.className = 'cart-item';
                itemElement.innerHTML = `
                    <div class="cart-item-name">
                        <span class="cart-item-quantity">x${item.quantity}</span>
                        <span>${item.name}</span>
                    </div>
                    <div class="cart-item-price">${item.total.toFixed(2)} ₺</div>
                `;
                cartItems.appendChild(itemElement);
            });
            
            cartTotalElement.textContent = `${total.toFixed(2)} ₺`;
        } else {
            emptyCartMessage.style.display = 'block';
            cartTotalElement.textContent = '0.00 ₺';
        }
    }

    document.getElementById('orderButton').addEventListener('click', async function() {
        const tableNumber = document.getElementById('tableNumber').value;
        const orderNote = document.getElementById('orderNote').value;
        
        if (!tableNumber) {
            showToast('Lütfen masa numarası giriniz.', 'error');
            return;
        }

        // Sepetteki ürünleri topla
        const orderItems = [];
        const categories = document.querySelectorAll('.category-card');
        let hasItems = false;

        categories.forEach(category => {
            const foodCards = category.querySelectorAll('.food-card');
            
            foodCards.forEach(card => {
                const quantity = parseInt(card.querySelector('.quantity-value').textContent);
                if (quantity > 0) {
                    hasItems = true;
                    const foodId = card.querySelector('.quantity-value').id.split('-')[1];
                    const price = parseFloat(card.querySelector('.food-price').textContent);
                    
                    orderItems.push({
                        foodId: parseInt(foodId),
                        quantity: quantity,
                        price: price
                    });
                }
            });
        });

        if (!hasItems) {
            showToast('Lütfen en az bir ürün seçiniz.', 'error');
            return;
        }

        try {
            console.log('Gönderilen veri:', {
                items: orderItems,
                customerInfo: {
                    type: 'dine-in',
                    tableNumber: parseInt(tableNumber),
                    note: orderNote
                }
            });

            const response = await fetch('/Admin/Order/CreateOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    items: orderItems,
                    customerInfo: {
                        type: 'dine-in',
                        tableNumber: parseInt(tableNumber),
                        note: orderNote
                    }
                })
            });

            if (!response.ok) {
                const errorData = await response.text();
                console.error('Sunucu yanıtı:', response.status, errorData);
                throw new Error(`HTTP error! status: ${response.status}, message: ${errorData}`);
            }

            const result = await response.json();

            if (result.success) {
                showToast('Sipariş başarıyla oluşturuldu!', 'success');
                setTimeout(() => {
                    window.location.href = '/Admin/Table/Index';
                }, 2000);
            } else {
                showToast('Sipariş oluşturulurken bir hata oluştu: ' + result.message, 'error');
            }
        } catch (error) {
            console.error('Sipariş oluşturma hatası:', error);
            showToast('Sipariş oluşturulurken bir hata oluştu. Lütfen tekrar deneyiniz.', 'error');
        }
    });

    function showToast(message, type = 'success') {
        const toast = document.getElementById('orderToast');
        const toastBody = toast.querySelector('.toast-body');
        const toastHeader = toast.querySelector('.toast-header');
        
        // Mesajı güncelle
        toastBody.textContent = message;
        
        // Toast rengini ayarla
        if (type === 'success') {
            toastHeader.style.backgroundColor = '#198754';
        } else if (type === 'error') {
            toastHeader.style.backgroundColor = '#dc3545';
        }
        
        // Toast'u göster
        const bsToast = new bootstrap.Toast(toast, {
            animation: true,
            autohide: true,
            delay: 3000
        });
        bsToast.show();
    }

    // Sayfa yüklendiğinde masa numarasını kontrol et
    document.addEventListener('DOMContentLoaded', function() {
        const tableNumber = document.getElementById('tableNumber');
        if (!tableNumber.value) {
            alert('Masa numarası bulunamadı!');
            window.location.href = '/Admin/Table/Index';
        }
    });
</script>
